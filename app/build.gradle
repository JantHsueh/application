apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {

    signingConfigs {
        releasekey {
            keyAlias 'xiwu'
            keyPassword 'xw123123'
            storeFile file('..\\.\\keystore\\xwkey.jks')
            storePassword 'xw123123'
        }
    }

    compileSdkVersion 29
    defaultConfig {
        applicationId "com.icisoo.myapplication"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releasekey

        }
    }
}




project.tasks.whenTaskAdded { Task theTask ->
    if (theTask.name == 'assembleRelease') {
        theTask.dependsOn(myPrebuildTask)            // 编译完apk之后再执行自定义task
    }
}

task myPrebuildTask(type: Exec) {

    workingDir "./"
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        println("自定义的task")
        println(versionName)
        commandLine 'cmd', '/c', 'ipconfig'

    } else {
        println(versionName)
        println(versionCode)
        commandLine 'bash', '-c', 'pwd'
        commandLine 'bash', '-c', 'source setEnv.sh -a '+versionCode+' -b '+versionName
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

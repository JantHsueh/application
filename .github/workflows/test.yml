name: CI

on:
  push:
    branches:
      - master
    # 事件中要考虑的文件路径。 Optional; defaults to all.
#    paths:
#      - 'app/build.gradle'
jobs:

  first-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
      #获取指定时区的时间
      - name: Get Time
        id: time
        uses: JantHsueh/get-time-action@master
        with:
          timeZone: 6
      # 打包apk
#      - name: Build with Gradle
#        run: chmod +x gradlew &&./gradlew assembleRelease

      #获取指定时区的时间
#      - name: Sign Apk
#        id: sign
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: app/build/outputs/apk/release/
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}

#        #向蒲公英上传文件
#      - name: Upload To Pgyer
#        uses: JantHsueh/upload-file-action@master
#        with:
#          url: https://www.pgyer.com/apiv2/app/upload
#          method: POST
#          forms: '{"_api_key":"${{ secrets.pgyer_key }}","buildInstallType":3}'
#          fileForms: '{"file":"${{ steps.sign.outputs.signedReleaseFile }}"}'
        #获取git log
      - name: Get git log
        id: git_log
        uses: JantHsueh/get-git-log-action@master
        with:
          tag: last_release
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ${{ steps.sign.outputs.signedReleaseFile }}
#          asset_name: fragmentation.apk
#          asset_content_type: application/zip